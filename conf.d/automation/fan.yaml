# Fan Mode Auto
- trigger:
    platform: time
    minutes: '/20'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.fan_mode_auto
        state: 'on'
      - condition: state
        entity_id: input_boolean.fan_override
        state: 'off'
  action:
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.fan_speed
        value: 1
    - service: homeassistant.turn_on
      entity_id: input_boolean.fan_mode_auto_on
- trigger:
    platform: state
    entity_id: input_boolean.fan_mode_auto_on
    to: 'on'
    for:
      minutes: 5
      seconds: 0
  condition:
    condition: state
    entity_id: input_boolean.fan_override
    state: 'off'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.fan_mode_auto_on
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.fan_speed
        value: 0

# Fan Mode Diff
- trigger:
    platform: state
    entity_id:
      - sensor.heater_couch_actual
      - sensor.heater_bed_actual
      - sensor.heater_kitchen_actual
      - sensor.heater_couch_set
      - sensor.heater_bed_set
      - sensor.heater_kitchen_set
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ ((float(states.sensor.heaters_diff.state) | abs) >= 4) or (float(states.sensor.heaters_valve_max.state) >= 20) }}
      - condition: state
        entity_id: input_boolean.fan_override
        state: 'off'
  action:
    - service: homeassistant.turn_off
      entity_id:
        - input_boolean.fan_mode_auto
        - input_boolean.fan_mode_auto_on
    - service: homeassistant.turn_on
      entity_id: input_boolean.fan_mode_diff

- trigger:
    platform: state
    entity_id:
      - sensor.heater_couch_actual
      - sensor.heater_bed_actual
      - sensor.heater_kitchen_actual
      - sensor.heater_couch_set
      - sensor.heater_bed_set
      - sensor.heater_kitchen_set
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {{ ((float(states.sensor.heaters_diff.state) | abs) < 4) and ((float(states.sensor.heaters_valve_max.state) < 20)) }}
      - condition: state
        entity_id: input_boolean.fan_override
        state: 'off'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.fan_mode_auto
    - service: homeassistant.turn_off
      entity_id: input_boolean.fan_mode_diff

- trigger:
    platform: state
    entity_id: input_boolean.fan_mode_diff
  condition:
    condition: state
    entity_id: input_boolean.fan_override
    state: 'off'
  action:
    - service: mqtt.publish
      data_template:
        topic: 'things/fan/setLevel/req'
        payload_template: >
          {"setLevel":{% if states.input_boolean.fan_mode_diff.state == 'on' %}1{% else %}0{% endif %}}'

# Fan Override
- trigger:
    platform: state
    entity_id: input_boolean.fan_override
    to: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id:
        - input_boolean.fan_mode_diff
        - input_boolean.fan_mode_auto
    - service: mqtt.publish
      data_template:
        topic: 'things/fan/setLevel/req'
        payload_template: '{"setLevel":0}'

- trigger:
    platform: state
    entity_id: input_boolean.fan_override
    to: 'off'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.fan_mode_auto

#- trigger:
#    platform: time
#    hours: 23
#    minutes: 0
#    seconds: 0
#  action:
#    - service: homeassistant.turn_on
#      entity_id: input_boolean.fan_override

#- trigger:
#    platform: time
#    hours: 7
#    minutes: 0
#    seconds: 0
#  action:
#    - service: homeassistant.turn_off
#      entity_id: input_boolean.fan_override

# Fan Speed
- trigger:
    platform: state
    entity_id: input_slider.fan_speed
  action:
    - service: mqtt.publish
      data_template:
        topic: "things/fan/setLevel/req"
        payload_template: "{\"setLevel\":{{ float(trigger.to_state.state) }}}"
